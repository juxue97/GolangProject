services:
  db:
    image: postgres:14.13-alpine3.20
    container_name: golangPgData
    restart: always
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: juxue
      POSTGRES_PASSWORD: veryStrongPassword
    networks:
      - backend
    ports:
      - "3000:5432"
    volumes:
      - D:/database/golangPgData:/var/lib/postgresql/data

  redis:
    image: redis:7.4.2-alpine
    restart: unless-stopped
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass "${REDIS_PASSWORD}" --save 60 1 --loglevel warning
    networks:
      - backend

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    hostname: redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=redis:6379
    depends_on:
      - redis
    networks:
      - backend

  consul:
    image: hashicorp/consul
    container_name: consul
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
    restart: unless-stopped
    ports:
      - 8500:8500
      - 8600:8600/udp
    volumes:
      - D:/database/consul:/consul/data

  rabbitmq:
    image: rabbitmq:4.0.5-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: juxue
      RABBITMQ_DEFAULT_PASS: veryStrongPassword

  jaeger:
    image: "jaegertracing/all-in-one:latest"
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"
      - "4318:4318"

  orders-mongo:
    image: "mongo:latest"
    container_name: orders-mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

  mongo-express:
    image: "mongo-express"
    restart: always
    ports:
      - 4060:8081
    environment:
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MONGODB_URL}

volumes:
  golangPgData:
  consul:

networks:
  backend:
    driver: bridge
